mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df23_final, ~ any(is.nan(.x))))
df24 = read_xlsx("raw_data/24/24.xlsx")
df24_final = df24 %>%
mutate(
Treatment = case_when(
GR == 1 ~ "Auriculotherapy",
GR == 0 ~ "Sham Comparator",
TRUE ~ NA_character_
)
) %>%
mutate(
YP_catheterized     = SONDES,
YS_anxiety_6h       = anxiete.6h,
YS_anxiety_1d       = anxiete.s,
YS_comfort_6h       = confort.6h,
YS_comfort_1d       = confort.s,
X_Age_0d                 = Age,
X_Height_0d              = Taille,
X_Weight_0d             = Poids,
X_BMI_0d                 = as.numeric(BMI),
X_Diabetes_0d            = DIAB,
X_Sequelae_Stroke_0d     = NEURO,
X_Alcoholism_0d          = ALCOOL,
X_BetaBlocker_0d         = BETAB,
X_Anesthesia_Duration_0d  = DURANES,
X_CrystalloidVolume_0d   = CRISTALOP,
X_NorepinephrineDose_0d  = as.numeric(NORADOP),
X_PACU_duration_0d       = as.integer(DURPACU),
Treatment = relevel(factor(Treatment), ref="Sham Comparator"),
across(c(YP_catheterized, X_Diabetes_0d, X_Sequelae_Stroke_0d, X_Alcoholism_0d,
X_BetaBlocker_0d), as_factor)
) %>%
select(
Treatment,
YP_catheterized,
starts_with("YS_"),
starts_with("X_")
)
any(purrr::map_lgl(df24_final, ~ any(is.nan(.x))))
df24_final = df24_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df24_final, ~ any(is.nan(.x))))
df25 = read_sav("raw_data/25/25.sav")
df25_final = df25 %>%
rename(Treatment = Group) %>%
mutate(
YP_delta_GQ1_8w   = GQ1_POST   - GQ1_PRE,
YP_delta_GQ2_8w   = GQ2_POS    - GQ2_PRE,
YP_delta_GQ3_8w   = GQ3_POST   - GQ3_PRE,
YP_delta_GQ4_8w   = Q4_POST    - GQ4_PRE,
YP_delta_GQ5_8w   = GQ5_POST   - GQ5_PRE,
YP_delta_GQ6_8w   = GQ6_POST   - GQ6_PRE,
YP_delta_GQ7_8w   = GQ7_POST   - GQ7_PRE,
YP_delta_GQ8_8w   = GQ8_POST   - GQ8_PRE,
YP_delta_GQ9_8w   = GQ9_POST   - GQ9_PRE,
YP_delta_BOF_8w   = BOF_POST   - BOF_PRE,
YP_delta_WGTT_8w  = WGTT_DIFF,
YS_DelayedGTT_8w  = ifelse(WGTT_POST >= 72, 1, 0),
YS_BM_less3_8w    = ifelse(BOF_POST   <  3, 1, 0)
) %>%
mutate(
X_Sex_0w            = factor(Sex),
X_Race_0w           = factor(Race),
X_Duration_0w       = Duration,
X_Sedentary_0w      = factor(Sedentary),
X_Levodopa_0w       = factor(Levodopa),
X_Dopamine_0w       = factor(Dopamine),
X_Fibre_0w          = factor(Fibre),
X_PD_stage_HY_0w    = factor(PD_stage_HY),
X_GQ1_0w         = GQ1_PRE,
X_GQ2_0w         = GQ2_PRE,
X_GQ3_0w         = GQ3_PRE,
X_GQ4_0w         = GQ4_PRE,
X_GQ5_0w         = GQ5_PRE,
X_GQ6_0w         = GQ6_PRE,
X_GQ7_0w         = GQ7_PRE,
X_GQ8_0w         = GQ8_PRE,
X_GQ9_0w         = GQ9_PRE,
X_BOF_0w         = BOF_PRE,
X_WGTT_0w        = WGTT_PRE,
X_NMSS_0w        = NMSS_PRE,
X_PDQ39SI_0w     = PDQ39SI_PRE,
X_UPDRS11_0w     = UPDRS11_PRE,
X_UPDRS111_0w    = UPDRS111_PRE,
X_BMI_0w         = BMI_PRE,
Treatment = case_when(
Treatment == 2 ~ "Probiotic with prebiotic",
Treatment == 1 ~ "Placebo",
T ~ NA_character_
)
) %>%
mutate(
YS_NMSS_8w     = NMSS_POST,
YS_PDQ39SI_8w  = PDQ39SI_POST,
YS_UPDRS11_8w  = UPDRS11_POST,
YS_UPDRS111_8w = UPDRS111_POST,
YS_BMI_8w      = BMI_POST,
YS_DelayedGTT_0w  = Delayed_WGTT_PRE,
YS_BM_less3_0w    = BM_less3perweek_PRE,
Treatment = relevel(factor(Treatment), ref="Placebo"),
across(c(YS_DelayedGTT_8w, YS_BM_less3_0w, YS_DelayedGTT_0w), as_factor)
) %>%
select(
Treatment,
starts_with("YP_"),
starts_with("YS_"),
starts_with("X_")
)
any(purrr::map_lgl(df25_final, ~ any(is.nan(.x))))
df25_final = df25_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df25_final, ~ any(is.nan(.x))))
df26 = read_sav("raw_data/26/26.sav")
df26_final = df26 %>%
rename(Treatment = Treatmentgroup) %>%
# 2. Baseline covariates and baseline primary outcome
rename(
X_Agecat_0m         = Agecat,
X_Education_0m      = Educationlevel2,
X_Ethnicity_0m      = Ethnicity,
X_Socialsupport_0m  = Socialsupport,
X_Adherence_0m   = Baselineadherencepercent,
X_CD4_0m         = BaselineCD4count,
X_viral_load_0m  = Baselineviralload,
X_weight_0m      = Baselineweight,
X_TB_status_0m   = BaselineTBStatus,
X_OI_index_0m    = BaselineOIindex
) %>%
# 3. Follow-up primary outcomes and change scores
mutate(
YP_delta_Adherence_6m    = Adherenceindex6mthsstd - X_Adherence_0m,
pre_YP_delta_Adherence_3m = Adherenceindex3mthsstd - X_Adherence_0m,
YP_optimal_adherence_6m  = `Adherence@6mths_binary`,
YP_attendance_6m         = Hospatendancecat
) %>%
# 4. Secondary outcomes at 6 months
mutate(
YS_delta_CD4_6m         = `CD4count@6months` - X_CD4_0m,
YS_delta_viral_load_6m  = `Viralload@6months` - X_viral_load_0m,
YS_delta_weight_6m      = `Weight@6months` - X_weight_0m,
YS_delta_TB_status_6m   = `TBStatus@6months` - X_TB_status_0m,
YS_delta_OI_index_6m    = `OIindex@6months` - X_OI_index_0m,
Treatment = case_when(
Treatment == 1 ~ "Standard Care",
Treatment == 2 ~ "Reminder module",
T ~ NA_character_
),
Treatment = relevel(factor(Treatment), ref="Standard Care"),
across(c(YP_optimal_adherence_6m, YP_attendance_6m, X_Agecat_0m, X_Education_0m,
X_Ethnicity_0m, X_Socialsupport_0m, X_TB_status_0m, X_OI_index_0m), as_factor)
) %>%
# 5. Select in the required order
select(
Treatment,
starts_with("YP_"),
starts_with("pre_YP_"),
starts_with("YS_"),
starts_with("X_")
)
any(purrr::map_lgl(df26_final, ~ any(is.nan(.x))))
df26_final = df26_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df26_final, ~ any(is.nan(.x))))
df27 = read_xls("raw_data/27/27.xls", skip = 1)
df27 = df27 %>%
mutate(across(where(~ is.character(.) | is.factor(.)),
~ na_if(., "missing data")))
df27_final = df27 %>%
mutate(
Treatment                    = Randomisation,
YP_bleeding_text             = `Main Criterion  (GAILLARD, MD)`,
YP_surgical_problem_bleeding = `Surgical problem due to bleading`,
YS_surgery_duration_min      = as.numeric(`Surgery duration (min)`),
YS_vent_settings_changes     = as.numeric(`Nb of modificaton of ventilatory setting`),
YS_vent_mode_modification    = `Modification of ventilatory mode`,
YS_hypoxemia_episodes        = `Nb of episodes with SpO2<92%`,
YS_recruitment_maneuvers     = `Nb of recrutement maneuvers`,
YS_min_SpO2                  = as.numeric(`Minimal SpO2`),
YS_pain_PACU                 = as.numeric(`Tolerance PACU`),
YS_endocrine_status_3m       = as.numeric(`Endocrine healing`),
## Guessed baseline covariates
`X_BMI>35_0d`                        = `BMI>35`,
X_pregnancy_0d                  = Pregnancy,
X_lung_disease_0d               = `Lung disease`,
X_redo_surgery_0d               = Redo,
X_Tv_0d                         = Tv,
X_FiO2_0d                       = as.numeric(Fio2),
X_AI_0d                         = as.numeric(AI),
X_Rate_0d                       = Rate
) %>%
# 2. Recode treatment and bleeding scale
mutate(
Treatment = recode(Treatment, VVC = "VCV", VPC = "PCV"),
# 7-level score: 1=minimal, 3=low, 5=no change, 7=change; intermediates 2,4,6 for “very weak”, “medium”, etc.
YP_bleeding_score = case_when(
YP_bleeding_text == "minimal (almost nil)"                                             ~ 2L,
YP_bleeding_text == "very weak"                                                        ~ 3L,
YP_bleeding_text == "weak"                                                             ~ 4L,
YP_bleeding_text == "medium"                                                           ~ 5L,
YP_bleeding_text == "important without modifying the conduct of the surgical procedure" ~ 6L,
YP_bleeding_text == "important and modifying the conduct of the surgical procedure"     ~ 7L,
TRUE                                                                                   ~ NA_integer_
),
# 3-category grouping: 1–3=mild, 4–5=moderate, 6–7=major :contentReference[oaicite:2]{index=2}
YP_bleeding_category3 = case_when(
YP_bleeding_score %in% 1:3 ~ "mild",
YP_bleeding_score %in% 4:5 ~ "moderate",
YP_bleeding_score %in% 6:7 ~ "major",
TRUE                       ~ NA_character_
),
Treatment = relevel(factor(Treatment), ref="VCV"),
across(c(YP_surgical_problem_bleeding, YP_bleeding_text, YP_bleeding_category3,
YS_vent_mode_modification, YS_hypoxemia_episodes, YS_recruitment_maneuvers,
X_redo_surgery_0d), as_factor),
X_redo_surgery_0d = as.numeric(X_redo_surgery_0d)
) %>%
# 3. Keep only randomized patients
filter(!is.na(Treatment)) %>%
# 4. Select and order final columns
select(
Treatment,
starts_with("YP_"),
starts_with("YS_"),
starts_with("X_")
)
any(purrr::map_lgl(df27_final, ~ any(is.nan(.x))))
df27_final = df27_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df27_final, ~ any(is.nan(.x))))
df28 = read_sav("raw_data/28/28.sav")
df28_final = df28 %>%
rename(
Treatment               = TrtContr,
# Baseline covariates (X_)
X_SEX_0m                   = SEX,
X_Age_0m                   = Age,
X_RxHTN_0m                 = RxHTN,
# Secondary outcomes (YS_)
X_BMI_0m                = BMI,
YS_BMI_6m               = FUBMI,
YS_delta_BMI_6m         = DIfBMI,
X_WC_0m                 = WC,
YS_WC_6m                = FUWC,
YS_delta_WC_6m          = DIfWC,
X_MeanSBP_0m            = MeanSBP,
YS_MeanSBP_6m           = FUMeanSBP,
YS_delta_MeanSBP_6m     = DIfSBP,
X_MeanDBP_0m            = MeanDBP,
YS_MeanDBP_6m           = FUMeanDBP,
YS_delta_MeanDBP_6m     = DIfDBP,
# Primary outcome (YP_)
X_ContrSBP_0m           = ContrSBP,
YP_ContrSBP_6m          = FUContrSBP,
# Other secondary binary outcomes
X_ContrDBP_0m           = ContrDBP,
YS_ContrDBP_6m          = FUContrDBP,
X_ControlledBP_0m       = ControlledBP,
YS_ControlledBP_6m      = FUControlledBP,
X_TotalScoreA_0m        = TotalScoreA,
YS_TotalScoreA_6m       = FUTotalScoreA,
YS_delta_TotalScoreA_6m = Diftotalscore
) %>%
mutate(
Treatment = case_when(
Treatment == 0 ~ "Usual Care",
Treatment == 1 ~ "Edu+Visit",
TRUE          ~ NA_character_
),
Treatment = relevel(factor(Treatment), ref="Usual Care"),
across(c(YP_ContrSBP_6m, YS_ContrDBP_6m, YS_ControlledBP_6m, X_SEX_0m, X_Age_0m,
X_RxHTN_0m, X_ContrSBP_0m, X_ContrDBP_0m, X_ControlledBP_0m), as_factor)
) %>%
select(
Treatment,
starts_with("YP"),
starts_with("YS"),
starts_with("X")
)
any(purrr::map_lgl(df28_final, ~ any(is.nan(.x))))
df27_final = df27_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df27_final, ~ any(is.nan(.x))))
any(purrr::map_lgl(df28_final, ~ any(is.nan(.x))))
df28_final = df28_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df28_final, ~ any(is.nan(.x))))
df29 = read_csv(
"raw_data/29/29.csv",
na = c("", "NULL", "null", "-99")
)
df29_final = df29 %>%
rename(
Treatment             = treatment,
ClusterID             = clusterid,
X_Caregiver_Age_0m       = bl_caregiver_age,
X_Caregiver_Matric_0m    = bl_caregiver_matric,
X_Wealth_Z_0m            = bl_wealth_z,
X_Wealth_Q_0m            = bl_wealth_q,
X_ChildGrant_0m          = bl_childgrant,
X_Siblings_0m            = siblings,
pre_YP_SRT_9m         = lab1_srt,
pre_YP_AbsGamma_9m    = lab1_gamma,
pre_YP_TotalPower_9m  = lab1_total,
pre_YP_RelGamma_9m    = lab1_relgamma,
pre_YP_SRT_17m        = lab2_srt,
pre_YP_AbsGamma_17m   = lab2_gamma,
pre_YP_TotalPower_17m = lab2_total,
pre_YP_RelGamma_17m   = lab2_relgamma,
YP_HAZ_36m            = el_haz,
YP_Stunted_36m        = el_stunted,
YP_MDAT_GM_Z_36m      = el_mdat_gm_daz,
YP_MDAT_FM_Z_36m      = el_mdat_fm_daz,
YP_MDAT_LANG_Z_36m    = el_mdat_lang_daz,
YP_MDAT_SOC_Z_36m     = el_mdat_soc_daz,
YP_AbsGamma_36m       = lab3_gamma,
YP_TotalPower_36m     = lab3_total,
YP_RelGamma_36m       = lab3_relgamma,
YP_SRT_36m            = lab3_srt,
YS_DD_36m             = el_dd,
YS_MICS_36m           = el_mics,
X_Facilities_0m          = cluster_facilities,
X_WBOTs_0m               = cluster_wbots,
X_CHWs_0m                = cluster_chws,
X_PHCU5_0m               = cluster_phcu5,
X_CHW_Age_0m             = cluster_chwage,
X_CHW_Educ_0m            = cluster_chweduc,
X_CHW_Tenure_0m          = cluster_chwworkyr
) %>%
mutate(
Treatment = recode(
Treatment,
`0` = "Usual care",
`1` = "JobAid visit"
),
Treatment = relevel(factor(Treatment), ref="Usual care")
) %>%
select(
Treatment,
ClusterID,
starts_with("YP_"),
starts_with("pre_YP_"),
starts_with("YS_"),
starts_with("X_")
)
# 3. Build cluster-level summary
mode_vars = c("YP_Stunted_36m", "X_Caregiver_Matric_0m", "X_ChildGrant_0m", "X_Siblings_0m",
"X_Facilities_0m", "X_WBOTs_0m")
df29_cluster = df29_final %>%
group_by(ClusterID) %>%
summarise(
n_participants = n(),
Treatment = first(Treatment),
across(
starts_with(c("YP_", "pre_YP_", "YS_", "X_")),
~ if (cur_column() %in% mode_vars) {
Mode(.x, na.rm = TRUE)
} else {
mean(.x, na.rm = TRUE)
}
)
) %>%
ungroup(ClusterID)%>%
select(
ClusterID,
Treatment,
n_participants,
starts_with("YP_"),
starts_with("pre_YP_"),
starts_with("YS_"),
starts_with("X_")
)
df29_final = df29_final %>%
mutate(
across(c(YP_Stunted_36m, X_Caregiver_Matric_0m, X_ChildGrant_0m, X_Siblings_0m,
X_Facilities_0m, X_WBOTs_0m), as_factor)
)
df29_cluster = df29_cluster %>%
mutate(
across(c(YP_Stunted_36m, X_Caregiver_Matric_0m, X_ChildGrant_0m, X_Siblings_0m,
X_Facilities_0m, X_WBOTs_0m), as_factor)
)
any(purrr::map_lgl(df29_final, ~ any(is.nan(.x))))
df29_final = df29_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df29_final, ~ any(is.nan(.x))))
any(purrr::map_lgl(df29_cluster, ~ any(is.nan(.x))))
df29_cluster = df29_cluster %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df29_cluster, ~ any(is.nan(.x))))
# trial 29
write_csv(df29_cluster, "cleaned_data/trial29.csv")
write_rds(df29_cluster, "cleaned_data/trial29.rds")
write_csv(df29_final, "cleaned_data/Clustered_RCT/cluster29.csv")
write_rds(df29_final, "cleaned_data/Clustered_RCT/cluster29.rds")
df30_sheets = import_list("raw_data/30/30.xlsx")
df30_sheets = lapply(df30_sheets, function(df) {
df %>%
# 1) only replace the literal string "NA" in character columns
mutate(across(where(is.character), ~ na_if(.,"NA"))) %>%
# 2) re-guess every column’s type, turning numeric-looking ones back to numeric
type_convert(na = "NA")
})
# then pull them back out as before
df30_demo      = df30_sheets[[1]]
df30_ceq       = df30_sheets[[2]]
df30_ec        = df30_sheets[[3]]
df30_sd        = df30_sheets[[4]]
df30_adherence = df30_sheets[[5]]
df30_dbs       = df30_sheets[[6]]
df30_final = df30_demo %>%
# 1) recode Treatment and pick baseline covariates
mutate(Treatment = case_when(
Condition == "Pool"           ~ "Pool-REST",
Condition == "Pool Preferred" ~ "Pool-REST preferred",
Condition == "Control"        ~ "Chair-REST",
TRUE                          ~ NA_character_
)) %>%
select(ID, Treatment,
X_Sex_0d            = Sex,
X_Psychotropics_0d  = Psychotropics,
X_Education_0d      = Education,
X_Age_0d            = Age,
X_OASIS_0d          = OASIS.Baseline,
X_PHQ9_0d           = PHQ9.Baseline,
X_ASI_0d            = ASI.Baseline) %>%
# 2) primary YP_Adherence (with NA if any missing)
left_join(
df30_adherence %>%
mutate(Completed = case_when(
Completed_Visit == "Yes" ~ 1,
Completed_Visit == "No"  ~ 0,
TRUE                     ~ NA_real_
)) %>%
group_by(ID) %>%
summarise(
YP_Adherence = if (any(is.na(Completed))) NA_real_ else mean(Completed)
) %>%
ungroup(),
by = "ID"
) %>%
# 3) CEQ secondary outcomes
left_join(
df30_ceq %>%
rename(
YS_Credibility1 = Credibility_1,
YS_Credibility2 = Credibility_2,
YS_Credibility3 = Credibility_3,
YS_Expectancy   = Expectancy
),
by = "ID"
) %>%
# 4) Session‐duration secondary outcome
left_join(
df30_sd %>%
group_by(ID) %>%
summarise(YS_MeanDuration = mean(Duration)) %>%
ungroup(),
by = "ID"
) %>%
# 5) bring in raw days‐between data
left_join(
df30_dbs %>%
rename(
X_DaysSinceBaseline = DaysSinceBaselineFloat,
X_DaysSince1        = DaysSinceFloat1,
X_DaysSince2        = DaysSinceFloat2,
X_DaysSince3        = DaysSinceFloat3,
X_DaysSince4        = DaysSinceFloat4,
X_DaysSince5        = DaysSinceFloat5
),
by = "ID"
) %>%
# 6) dropout & mean frequency from dbs
mutate(
# dropout if any NA in the 5 session‐intervals
YS_Dropout = if_else(
rowSums(is.na(select(., X_DaysSince1:X_DaysSince5))) > 0,
1L,
0L
),
# mean days between sessions
YS_MeanDaysBetween = rowMeans(
select(., X_DaysSince1:X_DaysSince5)
)
) %>%
# 7) adverse‐event counts & overall event rating
left_join(
df30_ec %>%
group_by(ID) %>%
summarise(
YS_AdverseCount = sum(Response < 0),
YS_EventMean    = mean(Response)
) %>%
ungroup(),
by = "ID"
) %>%
mutate(
Treatment = relevel(factor(Treatment), ref="Chair-REST"),
across(c(X_Sex_0d, X_Psychotropics_0d, X_Age_0d, YS_Dropout), as_factor)
) %>%
# 8) drop ID and order columns: Treatment → YP_ → YS_ → X_
select(
Treatment,
starts_with("YP_"),
starts_with("YS_"),
starts_with("X_")
)
any(purrr::map_lgl(df30_final, ~ any(is.nan(.x))))
df30_final = df30_final %>%
mutate(across(everything(), ~ replace(.x, is.nan(.x), NA)))
any(purrr::map_lgl(df30_final, ~ any(is.nan(.x))))
